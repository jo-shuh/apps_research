import 'dart:convert';
import 'dart:async';



import 'package:flutter/material.dart';
import 'package:order1/data.dart';
import 'package:order1/services/orderhistoy_repository.dart';
import 'package:http/http.dart' as http;
import 'package:order1/services/domain_server.dart';


void main() {
  runApp(MyApp(
  ));
}

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: '',
      theme: ThemeData(
        // This is the theme of your a pplication.
        //
        // Try running your application with "flutter run". You'll see the
        // application has a blue toolbar. Then, without quitting the app, try
        // changing the primarySwatch below to Colors.green and then invoke
        // "hot reload" (press "r" in the console where you ran "flutter run",
        // or simply save your changes to "hot reload" in a Flutter IDE).
        // Notice that the counter didn't reset back to zero; the application
        // is not restarted.
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(title: 'order History'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);

  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.

  // This class is the configuration for the state. It holds the values (in this
  // case the title) provided by the parent (in this case the App widget) and
  // used by the build method of the State. Fields in a Widget subclass are
  // always marked "final".

  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  Map data;
  List userData;

  Future   getOrders()async{
    http.Response response=await http.get("https://queensclassycollections.com/androidfashion/fetchorderhistory.php");
    data= jsonDecode(response.body);
    setState(() {
      userData= data["data"];
    });

}

@override
void initState() {
  super.initState();
  getOrders();
}

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: ListView.builder(
          itemCount:userData==null? 0:userData.length,

          itemBuilder: (context,index){
            return Card (
              child:Padding(
                padding: const EdgeInsets.all(19.0),
                child: Row(
                  children:<Widget> [
                    Text("${userData[index]["order_id"]} ${userData[index]["qty"]} ${userData[index]["amount"]}"
                    )
                  ],




                ),
              ),
            );
          },




        )

    );

  }
}


